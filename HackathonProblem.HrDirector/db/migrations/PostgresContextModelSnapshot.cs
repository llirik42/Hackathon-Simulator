// <auto-generated />
using System;
using HackathonProblem.HrDirector.db.contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HackathonProblem.HrDirector.db.migrations
{
    [DbContext(typeof(PostgresContext))]
    partial class PostgresContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HackathonProblem.HrDirector.db.entities.HackathonEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creation_date")
                        .HasDefaultValueSql("now()");

                    b.Property<double>("Harmonization")
                        .HasColumnType("double precision")
                        .HasColumnName("harmonization");

                    b.HasKey("Id")
                        .HasName("pk_hackathons");

                    b.ToTable("hackathons", null, t =>
                        {
                            t.HasCheckConstraint("Harmonization", "harmonization > 0");
                        });
                });

            modelBuilder.Entity("HackathonProblem.HrDirector.db.entities.JuniorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_juniors");

                    b.ToTable("juniors", (string)null);
                });

            modelBuilder.Entity("HackathonProblem.HrDirector.db.entities.JuniorPreferenceEntity", b =>
                {
                    b.Property<int>("HackathonId")
                        .HasColumnType("integer")
                        .HasColumnName("hackathon_id");

                    b.Property<int>("JuniorId")
                        .HasColumnType("integer")
                        .HasColumnName("junior_id");

                    b.Property<int>("DesiredTeamLeadId")
                        .HasColumnType("integer")
                        .HasColumnName("desired_team_lead_id");

                    b.Property<int>("DesiredTeamLeadPriority")
                        .HasColumnType("integer")
                        .HasColumnName("desired_team_lead_priority");

                    b.HasKey("HackathonId", "JuniorId", "DesiredTeamLeadId", "DesiredTeamLeadPriority")
                        .HasName("pk_junior_preferences");

                    b.HasIndex("DesiredTeamLeadId")
                        .HasDatabaseName("ix_junior_preferences_desired_team_lead_id");

                    b.HasIndex("JuniorId")
                        .HasDatabaseName("ix_junior_preferences_junior_id");

                    b.ToTable("junior_preferences", null, t =>
                        {
                            t.HasCheckConstraint("team-lead priority", "desired_team_lead_priority >= 0");
                        });
                });

            modelBuilder.Entity("HackathonProblem.HrDirector.db.entities.TeamEntity", b =>
                {
                    b.Property<int>("HackathonId")
                        .HasColumnType("integer")
                        .HasColumnName("hackathon_id");

                    b.Property<int>("TeamLeadId")
                        .HasColumnType("integer")
                        .HasColumnName("team_lead_id");

                    b.Property<int>("JuniorId")
                        .HasColumnType("integer")
                        .HasColumnName("junior_id");

                    b.HasKey("HackathonId", "TeamLeadId", "JuniorId")
                        .HasName("pk_teams");

                    b.HasIndex("JuniorId")
                        .HasDatabaseName("ix_teams_junior_id");

                    b.HasIndex("TeamLeadId")
                        .HasDatabaseName("ix_teams_team_lead_id");

                    b.ToTable("teams", (string)null);
                });

            modelBuilder.Entity("HackathonProblem.HrDirector.db.entities.TeamLeadEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_team_leads");

                    b.ToTable("team_leads", (string)null);
                });

            modelBuilder.Entity("HackathonProblem.HrDirector.db.entities.TeamLeadPreferenceEntity", b =>
                {
                    b.Property<int>("HackathonId")
                        .HasColumnType("integer")
                        .HasColumnName("hackathon_id");

                    b.Property<int>("TeamLeadId")
                        .HasColumnType("integer")
                        .HasColumnName("team_lead_id");

                    b.Property<int>("DesiredJuniorId")
                        .HasColumnType("integer")
                        .HasColumnName("desired_junior_id");

                    b.Property<int>("DesiredJuniorPriority")
                        .HasColumnType("integer")
                        .HasColumnName("desired_junior_priority");

                    b.HasKey("HackathonId", "TeamLeadId", "DesiredJuniorId", "DesiredJuniorPriority")
                        .HasName("pk_team_lead_preferences");

                    b.HasIndex("DesiredJuniorId")
                        .HasDatabaseName("ix_team_lead_preferences_desired_junior_id");

                    b.HasIndex("TeamLeadId")
                        .HasDatabaseName("ix_team_lead_preferences_team_lead_id");

                    b.ToTable("team_lead_preferences", null, t =>
                        {
                            t.HasCheckConstraint("junior priority", "desired_junior_priority >= 0");
                        });
                });

            modelBuilder.Entity("HackathonProblem.HrDirector.db.entities.JuniorPreferenceEntity", b =>
                {
                    b.HasOne("HackathonProblem.HrDirector.db.entities.TeamLeadEntity", "DesiredTeamLead")
                        .WithMany()
                        .HasForeignKey("DesiredTeamLeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_junior_preferences_team_leads_desired_team_lead_id");

                    b.HasOne("HackathonProblem.HrDirector.db.entities.HackathonEntity", "Hackathon")
                        .WithMany()
                        .HasForeignKey("HackathonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_junior_preferences_hackathons_hackathon_id");

                    b.HasOne("HackathonProblem.HrDirector.db.entities.JuniorEntity", "Junior")
                        .WithMany()
                        .HasForeignKey("JuniorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_junior_preferences_juniors_junior_id");

                    b.Navigation("DesiredTeamLead");

                    b.Navigation("Hackathon");

                    b.Navigation("Junior");
                });

            modelBuilder.Entity("HackathonProblem.HrDirector.db.entities.TeamEntity", b =>
                {
                    b.HasOne("HackathonProblem.HrDirector.db.entities.HackathonEntity", "Hackathon")
                        .WithMany()
                        .HasForeignKey("HackathonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_teams_hackathons_hackathon_id");

                    b.HasOne("HackathonProblem.HrDirector.db.entities.JuniorEntity", "Junior")
                        .WithMany()
                        .HasForeignKey("JuniorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_teams_juniors_junior_id");

                    b.HasOne("HackathonProblem.HrDirector.db.entities.TeamLeadEntity", "TeamLead")
                        .WithMany()
                        .HasForeignKey("TeamLeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_teams_team_leads_team_lead_id");

                    b.Navigation("Hackathon");

                    b.Navigation("Junior");

                    b.Navigation("TeamLead");
                });

            modelBuilder.Entity("HackathonProblem.HrDirector.db.entities.TeamLeadPreferenceEntity", b =>
                {
                    b.HasOne("HackathonProblem.HrDirector.db.entities.JuniorEntity", "DesiredJunior")
                        .WithMany()
                        .HasForeignKey("DesiredJuniorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_team_lead_preferences_juniors_desired_junior_id");

                    b.HasOne("HackathonProblem.HrDirector.db.entities.HackathonEntity", "Hackathon")
                        .WithMany()
                        .HasForeignKey("HackathonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_team_lead_preferences_hackathons_hackathon_id");

                    b.HasOne("HackathonProblem.HrDirector.db.entities.TeamLeadEntity", "TeamLead")
                        .WithMany()
                        .HasForeignKey("TeamLeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_team_lead_preferences_team_leads_team_lead_id");

                    b.Navigation("DesiredJunior");

                    b.Navigation("Hackathon");

                    b.Navigation("TeamLead");
                });
#pragma warning restore 612, 618
        }
    }
}
